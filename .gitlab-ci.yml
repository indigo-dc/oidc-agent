---
include:
  - 'https://git.scc.kit.edu/m-team/ci-voodoo/raw/master/ci-include/generic-ci.yml'
  - 'https://git.scc.kit.edu/m-team/ci-voodoo/raw/master/ci-include/pipeline-jobs.yml'
  - 'https://git.scc.kit.edu/m-team/ci-voodoo/raw/master/ci-include/pipeline-jobs-publish-to-repo.yml'

variables:
  STAGING_BRANCH_NAME: 'staging'
  DOCKER_IMAGE_NAMESPACE: 'marcvs/build'
  DOCKER_IMAGE_NAME: 'oidc-agent'
  GIT_STRATEGY: clone
  GIT_DEPTH: 0
  # TARGET_REPO: 'devel'
  # The following varialbes can be overwritten only in specific targets
  # See generic-ci.yml -> .repo-definition for the full list
  # REPO_BASE => deprecated
  # REPO_USER
  # REPO_HOST
  # PUBLISH_BUILD_RESULTS_REPO: 'devel'
  # PUBLISH_TESTED_RESULTS_REPO: 'prerel'
  # PUBLISH_MASTER_RESULTS_REPO: 'for-prod'
  PREREL_BRANCH_NAME: 'prerel'
  # PREREL_BRANCH_NAME: 'ci/move-buildfiles-out'
  # See generic-ci.yml -> .build-definition for the full list
  # DOCKER_IMAGE_VERSION
  # DOCKER_IMAGE_VERSION_WINDOWS
  # PREREL_BRANCH_NAME: 'feat/mytoken/server_profiles'
  MTEAM_CI_EXTRA_REPOSITORY_STRING: 'deb https://repo.data.kit.edu/devel/${DISTRO}/${RELEASE} ./'
  MTEAM_CI_EXTRA_REPOSITORY_KEY_URL: 'https://repo.data.kit.edu/devel/automatic-repo-data-kit-edu-key.gpg'
  MTEAM_CI_EXTRA_REPOSITORY_URL_YUM: 'https://repo.data.kit.edu/devel/data-kit-edu-${DISTRO}${RELEASE}.repo'
  MTEAM_CI_EXTRA_REPOSITORY_URL_ZYPPER: 'https://repo.data.kit.edu/devel/data-kit-edu-${DISTRO}${RELEASE}.repo'
  MTEAM_CI_ADDITIONAL_PACKAGES_APT: 'mustache-spec libmustach-core-dev libclibs-list-dev'
  MTEAM_CI_ADDITIONAL_PACKAGES_YUM: ''
  MTEAM_CI_ADDITIONAL_PACKAGES_ZYPPER: ''


build-debian-buster:
  extends:
    - .build-debian-buster
  script:
    - make buster-debsource
    - dpkg-buildpackage -uc -us
  allow_failure: true

build-debian-bullseye:
  extends:
    - .build-debian-bullseye

build-debian-bookworm:
  extends:
    - .build-debian-bookworm

build-ubuntu-focal:
  extends:
    - .build-ubuntu-focal
  script:
    - make focal-debsource
    - dpkg-buildpackage -uc -us
  allow_failure: true

build-ubuntu-bionic:
  extends:
    - .build-ubuntu-bionic
  script:
    - make bionic-debsource
    - dpkg-buildpackage -uc -us
  allow_failure: true

build-ubuntu-jammy:
  extends:
    - .build-ubuntu-jammy

build-ubuntu-kinetic:
  extends:
    - .build-ubuntu-kinetic



###### WINDOWS ######
build-windows-lib-64:
  extends:
    - .build-win-msys2-mingw64
    - .on-push-and-master
  variables:
    DOCKER_IMAGE_VERSION_WINDOWS: '3'
  artifacts:
    paths:
      - bin
      - include
  script:
    - |
      set -e
      set -x
      mkdir -p results/
      make -j 1
      make -j 1 install_includes INCLUDE_PATH=include
      rm -rf bin 
      mkdir bin
      cp lib/api/liboidc-agent* bin

  dependencies:
    - build-windows-64

build-windows-64:
  extends:
    - .build-win-msys2
    - .on-push-and-master
  variables:
    DOCKER_IMAGE_VERSION_WINDOWS: '3'
  artifacts:
    paths:
      - bin
      - config
      - VERSION
      - logos/logo.ico
  script:
    - |
      set -e
      set -x

      # Build
      make -j 1 win
      ls -la bin

      set +x

ki-oidc-plugin:
  stage: build
  needs:
    - build-windows-64
    - build-windows-lib-64
  rules:
    - if: $CI_PIPELINE_SOURCE != "push" && $CI_PIPELINE_SOURCE != "web"
      when: never
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"
      variables:
        TRIGGER_BRANCH: main
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        TRIGGER_BRANCH: main
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      variables:
        TRIGGER_BRANCH: devel
  inherit:
    variables:
      - ANYBRANCH_RESOLVE_DEPENDENCIES_REPO
      - ANYBRANCH_RESOLVE_DEPENDENCIES_REPO
      - DISTRO
      - PREPROD_RESOLVE_DEPENDENCIES_REPO
      - PREREL_BRANCH_NAME
      - PREREL_RESOLVE_DEPENDENCIES_REPO
      - RELEASE
      - RESOLVE_DEPENDENCIES_REPO
  variables:
    # These are needed to find the artifacts:
    CI_UPSTREAM_PROJECT_PATH: $CI_PROJECT_PATH
    CI_UPSTREAM_COMMIT_REF_NAME: $CI_COMMIT_REF_NAME
    # These are needed to synchronise the rules
    CI_UPSTREAM_PIPELINE_SOURCE: $CI_PIPELINE_SOURCE
    CI_UPSTREAM_COMMIT_BRANCH: $CI_COMMIT_BRANCH
    CI_UPSTREAM_DEFAULT_BRANCH: $CI_DEFAULT_BRANCH
    CI_UPSTREAM_COMMIT_SHA: $CI_COMMIT_SHA
    AGENT_REF: $CI_COMMIT_REF_NAME
  trigger:
    project: m-team/ki-oidc-plugin
    branch: $TRIGGER_BRANCH
    strategy: depend

installer:
  stage: publish
  needs:
    - build-windows-64
    - ki-oidc-plugin
  rules:
    - if: $CI_PIPELINE_SOURCE != "push" && $CI_PIPELINE_SOURCE != "web"
      when: never
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"
      variables:
        TRIGGER_BRANCH: main
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        TRIGGER_BRANCH: main
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      variables:
        TRIGGER_BRANCH: devel
  inherit:
    variables:
      - ANYBRANCH_RESOLVE_DEPENDENCIES_REPO
      - ANYBRANCH_RESOLVE_DEPENDENCIES_REPO
      - DISTRO
      - PREPROD_RESOLVE_DEPENDENCIES_REPO
      - PREREL_BRANCH_NAME
      - PREREL_RESOLVE_DEPENDENCIES_REPO
      - RELEASE
      - RESOLVE_DEPENDENCIES_REPO
  variables:
    # These are needed to find the artifacts:
    CI_UPSTREAM_PROJECT_PATH: $CI_PROJECT_PATH
    CI_UPSTREAM_COMMIT_REF_NAME: $CI_COMMIT_REF_NAME
    # These are needed to synchronise the rules
    CI_UPSTREAM_PIPELINE_SOURCE: $CI_PIPELINE_SOURCE
    CI_UPSTREAM_COMMIT_BRANCH: $CI_COMMIT_BRANCH
    CI_UPSTREAM_DEFAULT_BRANCH: $CI_DEFAULT_BRANCH
    CI_UPSTREAM_COMMIT_SHA: $CI_COMMIT_SHA
    PLUGIN_REF: $TRIGGER_BRANCH
    AGENT_REF: $CI_COMMIT_REF_NAME
  trigger:
    project: m-team/oidc/oidc-agent-win-installer
    branch: $TRIGGER_BRANCH
    strategy: depend
